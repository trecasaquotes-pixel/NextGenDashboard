🧩 Fix: “Description must be at least 2 characters” when applying a Template

Context / What’s happening
When I click Use Template (e.g., “1 BHK”) to auto-add rooms/items to a quotation, the server responds:

400: {"message":"Validation error","errors":[{"field":"description","message":"Description must be at least 2 characters"}]}


This means the backend validation for one of the created records (quotation/room/item) requires a non-empty description (min length 2), but the template apply code is sending description: "" or description is missing/empty for some of the generated rows.

Goal
Allow applying templates even when no description is provided. No user should be blocked by this validation.

Files (likely)

Zod/validation schemas: server/**/validation/*.ts or in route files (e.g., server/routes/quotes.ts, server/routes/templates.ts)

Template application logic/service: server/**/template*(apply|assign|import)*.ts or wherever “Use Template” inserts rooms/items

DB mappers/models: server/db/schema/*.ts

Edits

Relax the schema for description wherever it applies to quotation/room/item inserts created by template application:

Change from: z.string().min(2, "Description must be at least 2 characters")

To one of (pick one consistent approach and apply everywhere relevant):

Option A (allow omitted/empty):

description: z
  .string()
  .transform(v => (v?.trim() ?? "")) // normalize
  .refine(v => v.length === 0 || v.length >= 2, "Description must be at least 2 characters")
  .optional(),


Option B (optional/nullable and trimmed; empty becomes undefined):

description: z
  .string()
  .optional()
  .nullable()
  .transform(v => (typeof v === "string" && v.trim().length === 0 ? undefined : v));


The key is: empty or missing descriptions should pass; if provided, they must be ≥2 chars.

Sanitize data in template apply pipeline

When creating quotation rooms/items from a template, ensure we do not send ""; either omit description or set it to null/undefined.

If needed, set a safe default at the top level only (e.g., description: "Auto-generated from template"), but do not force fake text into each line item.

Trim inputs

Before validation, trim strings so " " doesn’t pass.

Apply a small helper: sanitizeDescription(value) => undefined if empty after trim.

Manual Test

Open “New Quotation” → choose category → click Use Template (without editing anything).

Expected: rooms/items added successfully; no 400 error.

Try editing a description with one character (“-”) → should fail with the same validation message only when user explicitly submits a one-char description in a form (if that form validates).

Try leaving description blank in UI → should still pass.

Acceptance Criteria

 Applying a template works with blank descriptions (no 400).

 If description is provided by the user, values < 2 chars are rejected with the same message.

 No other routes regress (create/update flows still validate properly).

 Database rows created by template do not contain meaningless single-character placeholders.

Guardrails

Do not change other required fields or business logic.

Keep existing error shape { message, errors: [{ field, message }] }.

Do not alter table schemas unless necessary; prefer validation & mapping fixes.